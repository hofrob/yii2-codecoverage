#!/bin/bash
SOURCE="${BASH_SOURCE[0]}"
DIR="$( cd "$( dirname "$SOURCE" )" && pwd )"
OS=`uname`
SELF="bash ${DIR}/dc"
OPTIND=1
PROJECT_PREFIX=yii2-codecoverage

export HTTP_USER="$(id -u)"
export HTTP_GROUP="$(id -u)"

COMPOSE_FILE=${DIR}/../docker/docker-compose.yml
COMMAND_CONTAINER_NAME=$PROJECT_PREFIX-command

if [ "$1" == "start" ]
then
    docker-compose -f $COMPOSE_FILE up -d
    ${SELF} logs
    RETURN=$?;
elif [ "$1" == "stop" ]
then
    docker-compose -f $COMPOSE_FILE stop
    RETURN=$?;
elif [ "$1" == "down" ]
then
    docker-compose -f $COMPOSE_FILE down -v
    RETURN=$?;
elif [ "$1" == "restart" ]
then
    ${SELF} stop
    ${SELF} start
    RETURN=$?;
elif [ "$1" == "reboot" ]
then
    ${SELF} down
    ${SELF} start
    RETURN=$?;
elif [ "$1" == "logs" ]
then
    if  [ "$2" == "app" ] || [ "$2" == "application" ]
    then
        docker-compose -f $COMPOSE_FILE logs -f $PROJECT_PREFIX-application
    elif [ "$2" == "db" ] || [ "$2" == "database" ]
    then
        docker-compose -f $COMPOSE_FILE logs -f $PROJECT_PREFIX-database
    elif [ "$2" == "web" ]
    then
        docker-compose -f $COMPOSE_FILE logs -f $PROJECT_PREFIX-web
    elif [ -n "$2" ]
    then
        docker-compose -f $COMPOSE_FILE logs -f $2
    else
        docker-compose -f $COMPOSE_FILE logs -f
    fi
    RETURN=$?;
elif [ "$1" == "initialize" ]
then
    ${SELF} build
    ${SELF} init --env=Development --overwrite=y
    RETURN=0
elif [ "$1" == "bash" ]
then
    if  [ -z "$2" ] || [ "$2" == "app" ] || [ "$2" == "application" ];
    then
        docker exec -it $PROJECT_PREFIX-application /docker/entrypoint.py bash
    elif [ "$2" == "web" ];
    then
        docker exec -it $PROJECT_PREFIX-web bash
    elif [ "$2" == "db" ] || [ "$2" == "database" ];
    then
        docker exec -it $PROJECT_PREFIX-database bash
    else
        echo "Unknown Option $2";
    fi
    RETURN=$?;
elif [ "$1" == "build" ]
then
    docker-compose -f $COMPOSE_FILE build
    RETURN=$?;
elif [ "$1" == "test" ]
then
    docker-compose -f $COMPOSE_FILE up -d
    docker-compose -f $COMPOSE_FILE run $PROJECT_PREFIX-application $@
    RETURN=$?;
else
    echo "----------------------";
    docker-compose -f $COMPOSE_FILE run --name $COMMAND_CONTAINER_NAME $PROJECT_PREFIX-application $@
    RETURN=$?;
    echo "----------------------";
    docker rm -f $COMMAND_CONTAINER_NAME
fi

exit $RETURN;
